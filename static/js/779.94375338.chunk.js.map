{"version":3,"file":"static/js/779.94375338.chunk.js","mappings":"qRAEaA,EAAcC,EAAAA,EAAAA,GAAH,6CAGXC,EAAkBD,EAAAA,EAAAA,GAAH,gD,SCyC5B,EAxCgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBDE,EAAAA,EAAAA,YAAU,WACTL,GAAa,GACb,IAAMM,EAAS,mCAAG,WAAMH,GAAN,iGAESI,EAAAA,EAAAA,IAAkBJ,GAF3B,OAERK,EAFQ,OAGdZ,EAAWY,EAASC,SAHN,gDAKdX,EAAS,KAAMY,MALD,yBAOZV,GAAa,GACbE,GAAgB,GARJ,4EAAH,sDAYfI,EAAUH,EACX,GAAE,CAACA,KAGE,2BACKJ,IAAa,SAACY,EAAA,EAAD,IACbd,IAAS,yBAAMA,IACfI,GAAmC,IAAnBN,EAAQiB,QAC7B,qEACK,SAACrB,EAAD,UACII,EAAQkB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACb,UAACvB,EAAD,YACJ,wBAAKsB,KACO,uBAAIC,MAFUF,EADT,QAQ5B,C,+LC5CYG,EAAW,+BACXC,EAAW,mCAClBC,EAAsB,oBAErB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAClBJ,GADkB,OACPE,EADO,oBACwBD,IAF1C,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BT,GAA5B,yFACkBO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,oBACcI,IAFhC,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,iCACgDO,EADhD,YADlB,uBACGH,EADH,EACGA,KADH,kBAIEA,GAJF,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BZ,GAA9B,yFACkBO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,4BACsBI,IAFxC,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAiCO,GAAjC,yFACkBO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,4BACsBI,IAFxC,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\nexport const ReviewsListItem = styled.li`\n  margin-bottom: 40px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { fetchMovieReviews } from \"services/api\";\nimport Loader from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { ReviewsListItem, ReviewsList } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDownloaded, setIsDownloaded] = useState(false);\n    const { movieId } = useParams();\n\n   useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async movieId => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        setError(error.name);\n      } finally {\n          setIsLoading(false);\n          setIsDownloaded(true);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {error && <div>{error}</div>}\n            {isDownloaded && reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>):\n            (<ReviewsList>\n                {reviews.map(({id, author, content})=>\n                <ReviewsListItem key={id}>\n            <h3>{author}</h3>\n                        <p>{content}</p>\n                    </ReviewsListItem>)}\n            </ReviewsList>)}\n        </div>\n    )\n}\nexport default Reviews;","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nconst PARAMETERS_TRENDING = '/trending/all/day';\n\nexport async function fetchTrendings() {\n  const { data } = await axios.get(\n    `${BASE_URL}${PARAMETERS_TRENDING}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieId(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieSearch(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&language=en-US&query=${query}&page=1`\n  );\n  return data;\n}\nexport async function fetchMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${USER_KEY}`\n  );\n  return data;\n}\n"],"names":["ReviewsList","styled","ReviewsListItem","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","isDownloaded","setIsDownloaded","movieId","useParams","useEffect","fetchData","fetchMovieReviews","response","results","name","Loader","length","map","id","author","content","BASE_URL","USER_KEY","PARAMETERS_TRENDING","fetchTrendings","axios","data","fetchMovieId","fetchMovieSearch","query","fetchMovieCast"],"sourceRoot":""}