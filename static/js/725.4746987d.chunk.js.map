{"version":3,"file":"static/js/725.4746987d.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink as StyledLink } from 'react-router-dom';\n\nexport const AddLink = styled(StyledLink)`\n  text-decoration: none;\n`;\n\nexport const AddList = styled.ul`\n  list-style: none;\n  margin-bottom: 40px;\n`;\n\nexport const Poster = styled.img`\n  margin-bottom: 20px;\n`;\n\nexport const AddInfo = styled.p`\n  margin-top: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport {  Outlet } from \"react-router-dom\";\nimport { AddList, AddLink, Poster, AddInfo } from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n    \n  const { poster_path, original_title, overview, genres } = movie;\n  const year = parseInt(movie.release_date).toString();\n    \n  const rating = Math.floor(movie.vote_average * 10);\n  return (\n        \n    <div>\n      <div>\n        <Poster\n          alt={original_title}\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n          width=\"200\"\n        />\n      </div>\n      <div>\n        <h2>{original_title} ({year})</h2>\n                \n        <p>User Score: {rating}%</p>\n            \n        <h3>Overwiev</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres &&\n          genres.length > 0 &&\n          genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n      <AddInfo>\n        Additional information\n      </AddInfo>\n      <AddList>\n        <li>\n          <AddLink to=\"cast\">Cast</AddLink>\n        </li>\n        <li>\n          <AddLink to=\"reviews\">Reviews</AddLink>\n        </li>\n      </AddList>\n      <Outlet />\n    </div>\n  )\n    \n    \n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\n\n\n\n\nexport default MovieCard;","import { useState, useEffect, useRef } from 'react';\nimport { fetchMovieId } from 'services/api';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDownloaded, setIsDownloaded] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async movieId => {\n      try {\n        const response = await fetchMovieId(movieId);\n\n        setMovie(response);\n      } catch (error) {\n        setError(error.name);\n      } finally {\n        setIsLoading(false);\n        setIsDownloaded(true);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n  return (\n    <div>\n      <Link to={backLinkRef.current} state={{ from: 'MovieDetails' }}>\n        Go back\n      </Link>\n\n      <div>\n        {isLoading && <Loader />}\n        {error && { error }}\n\n        {isDownloaded && <MovieCard movie={movie} />}\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nconst PARAMETERS_TRENDING = '/trending/all/day';\n\nexport async function fetchTrendings() {\n  const { data } = await axios.get(\n    `${BASE_URL}${PARAMETERS_TRENDING}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieId(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieSearch(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&language=en-US&query=${query}&page=1`\n  );\n  return data;\n}\nexport async function fetchMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${USER_KEY}`\n  );\n  return data;\n}\n"],"names":["AddLink","styled","StyledLink","AddList","Poster","AddInfo","movie","poster_path","original_title","overview","genres","year","parseInt","release_date","toString","rating","Math","floor","vote_average","alt","src","width","length","map","genre","name","join","to","useState","setMovie","isLoading","setIsLoading","error","setError","isDownloaded","setIsDownloaded","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchData","fetchMovieId","response","current","Loader","BASE_URL","USER_KEY","PARAMETERS_TRENDING","fetchTrendings","axios","data","id","fetchMovieSearch","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}